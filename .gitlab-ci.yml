image: node:latest

services:
  - postgres:latest

variables:

  POSTGRES_DB: todos-dev
  POSTGRES_USER: senthilkumar
  POSTGRES_PASSWORD: ""
  POSTGRES_HOST: postgres

connect:
  image: postgres
  script:
  # official way to provide password to psql: http://www.postgresql.org/docs/9.3/static/libpq-envars.html
  - export PGPASSWORD=$POSTGRES_PASSWORD
  - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"


stages:
  - build
  - format
  - lint
  - test

cache:
  paths:
    - node_modules/

install_dependencies:
  stage: build
  script:
    - npm install
  artifacts:
    paths:
      - node_modules/
formating:
  stage: format
  script:
    - npm install -g husky lint-staged
    - npm run format

eslint:
  stage: lint
  script:
    # Install ESLint in this docker container
    - npm install -g eslint
    # Configure ESLint (will read your .eslintrc file)
    #- eslint --init
    # Run ESLint
    - eslint ./app/*

testing_testing:
  stage: test
  script:
    - npm install -g nyc
    - npm install -g sequelize-cli
    - sequelize db:migrate
    - npm test
    - npm run coverage
    - mv .nyc_output/ coverage/
  coverage: /All files\s*\|\s*([\d\.]+)/
  artifacts:
      paths:
      - coverage/
